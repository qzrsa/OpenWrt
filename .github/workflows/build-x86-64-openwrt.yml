name: OpenWrt x86/64 自动编译系统

on:
  workflow_dispatch:
    inputs:
      源码版本:
        description: '选择OpenWrt版本'
        required: true
        default: '24.10'
        type: choice
        options: [24.10]

      目标设备:
        description: '选择编译设备'
        required: true
        default: 'x86-64'
        type: choice
        options: [x86-64]

      默认IP:
        description: '设置登录IP地址'
        required: false
        default: '192.168.11.1'

      分区大小:
        description: '设置rootfs分区大小(MB)'
        required: false
        default: '800'

      工具链缓存:
        description: '启用工具链缓存加速'
        required: false
        default: true
        type: boolean

      终端工具:
        description: '安装ZSH终端工具'
        required: false
        default: true
        type: boolean

      上传产物:
        description: '上传固件到Artifact'
        required: false
        default: true
        type: boolean

      发布版本:
        description: '上传固件到Releases'
        required: false
        default: true
        type: boolean

jobs:
  编译任务:
    runs-on: ubuntu-22.04
    name: 编译 ${{ github.event.inputs.目标设备 }} ${{ github.event.inputs.源码版本 }}
    
    env:
      默认IP: ${{ github.event.inputs.默认IP }}
      分区大小: ${{ github.event.inputs.分区大小 }}
      启用工具链: ${{ github.event.inputs.工具链缓存 }}
      安装终端工具: ${{ github.event.inputs.终端工具 }}
      配置文件: configs/${{ github.event.inputs.目标设备 }}-${{ github.event.inputs.源码版本 }}.config
      编译脚本: diy-${{ github.event.inputs.源码版本 }}.sh
      工具链标签: toolchain
      上传二进制: false
      时区: Asia/Shanghai
      源码分支: openwrt-24.10
      # 新增路径变量
      工作目录: ${{ github.workspace }}
      OpenWrt路径: ${{ github.workspace }}/openwrt

    steps:
    - name: 获取源代码
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: 系统性能检查
      run: |
        echo "⚠️ 性能提示：插件过多可能导致编译失败"
        echo "==========================CPU信息=========================="
        echo "CPU核心数: $(nproc)"
        echo "CPU型号: $(lscpu | grep "Model name" | cut -d: -f2 | sed 's/^ *//')"
        echo "==========================内存信息=========================="
        free -h
        echo "==========================磁盘信息=========================="
        df -hT

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # 清理系统资源
        sudo swapoff -a
        sudo rm -f /swapfile
        
        # 安装必要依赖
        sudo apt-get update
        sudo apt-get install -y zstd build-essential clang libssl3 liblua5.4-dev
        
        # 设置时区
        sudo timedatectl set-timezone "$时区"
        
        # 设置文件权限
        chmod +x $编译脚本
        chmod +x scripts/*

    - name: 验证配置文件
      run: |
        echo "=== 文件验证 ==="
        echo "检查编译脚本: $编译脚本"
        [ -f "$编译脚本" ] || (echo "错误：编译脚本不存在"; exit 1)
        
        echo "检查配置文件: $配置文件"
        [ -f "$配置文件" ] || (echo "错误：配置文件不存在"; exit 1)
        
        echo "=== 配置预览 ==="
        head -n 20 $配置文件

    - name: 执行编译脚本
      run: |
        echo "开始编译 ${{ github.event.inputs.目标设备 }} 设备固件"
        ./$编译脚本
        
    - name: 编译固件
      id: firmware_compile
      run: |
        cd $OpenWrt路径
        echo "使用 $(nproc) 线程编译"
        make -j$(nproc) || make -j1 V=s
        
        # 设置环境变量
        echo "编译日期=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
        echo "发布时间=$(date +"%Y%m%d-%H%M")" >> $GITHUB_ENV
        echo "固件版本=$(cat version.date)" >> $GITHUB_ENV
        echo "发布标签=${{ github.event.inputs.目标设备 }}-${{ github.event.inputs.源码版本 }}-$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

    - name: 整理固件文件
      if: steps.firmware_compile.conclusion == 'success'
      run: |
        cd $OpenWrt路径/bin/targets/*/*
        echo "=== 固件文件列表 ==="
        ls -lh
        
        # 创建压缩包
        tar -zcf packages.tar.gz packages
        echo "固件目录=$PWD" >> $GITHUB_ENV

    - name: 上传到产物(Artifacts)
      if: steps.firmware_compile.conclusion == 'success' && github.event.inputs.上传产物 == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-${{ github.event.inputs.目标设备 }}-固件
        path: ${{ env.固件目录 }}
        retention-days: 7

    - name: 发布到版本(Releases)
      if: steps.firmware_compile.conclusion == 'success' && github.event.inputs.发布版本 == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.发布标签 }}
        name: "OpenWrt ${{ env.固件版本 }} - ${{ github.event.inputs.目标设备 }}"
        body: |
          ### 🚀 OpenWrt 自动编译版本
          **设备架构**: ${{ github.event.inputs.目标设备 }}
          **源码版本**: ${{ github.event.inputs.源码版本 }}
          **编译日期**: ${{ env.编译日期 }}
          
          **默认登录**: 
          - IP地址: ${{ github.event.inputs.默认IP }}
          - 用户名: root
          - 密码: (无)
          
          **包含功能**:
          - 最新安全更新
          - 优化网络性能
          - 支持Docker容器
        files: |
          ${{ env.固件目录 }}/*.img.gz
          ${{ env.固件目录 }}/*.rootfs.tar.gz
          ${{ env.固件目录 }}/packages.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
